name: 'Experiment'

on:
  push:
    branches: [ 'dynamically-parallelize-tests' ]

# When pushing a new commit we should
# cancel the previous test run to not
# consume more runners than we need to.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  AZURE_STORAGE_ACCOUNT_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_ACCOUNT_CONNECTION_STRING }}

jobs:
  prepare-for-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Checkout the latest commit in this branch
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: npm install
        working-directory: ./core
        shell: bash
      - name: Init Test Queue
        run: node scripts/test-queue/init.mjs
        working-directory: ./core
        shell: bash

  build-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Checkout the latest commit in this branch
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/workflows/actions/build-core

  test-core-screenshot:
    strategy:
      matrix:
        # Divide the tests into n buckets
        # and run those buckets in parallel.
        # To increase the number of shards,
        # add new items to the shard array
        # and change the value of totalShards
        # to be the length of the shard array.
        shard: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
        totalShards: [20]
    needs: [build-core, prepare-for-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/test-core-screenshot
        with:
          shard: ${{ matrix.shard }}
          totalShards: ${{ matrix.totalShards }}
